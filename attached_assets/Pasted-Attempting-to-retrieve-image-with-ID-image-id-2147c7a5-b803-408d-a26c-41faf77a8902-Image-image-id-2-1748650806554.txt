Attempting to retrieve image with ID: image-id-2147c7a5-b803-408d-a26c-41faf77a8902
Image image-id-2147c7a5-b803-408d-a26c-41faf77a8902 found - serving with content type image/jpeg
11:34:23 PM [express] GET /api/images/image-id-2147c7a5-b803-408d-a26c-41faf77a8902 200 in 309ms
11:34:30 PM [express] GET /api/messages/unread-count 304 in 501ms :: {"count":0}
Attempting to retrieve image with ID: image-id-a32e9060-310b-4f4e-a7d3-18ad36e8f241
Image image-id-a32e9060-310b-4f4e-a7d3-18ad36e8f241 found - serving with content type image/jpeg
11:34:34 PM [express] GET /api/images/image-id-a32e9060-310b-4f4e-a7d3-18ad36e8f241 200 in 766ms
Getting active auctions from Supabase
Retrieved 2 active auctions
Auction #12: endsAt=2025-06-28T19:15:00.000Z, BST-adjusted current=2025-05-31T00:35:21.032Z, expired=false
Auction #21: endsAt=2025-06-02T07:24:45.321Z, BST-adjusted current=2025-05-31T00:35:21.032Z, expired=false
11:35:58 PM [express] GET /api/messages/unread-count 304 in 496ms :: {"count":0}
üîê BOOST ORDER AUTHENTICATION CHECK:
- req.isAuthenticated(): true
- req.user exists: true
- req.session exists: true
- req.sessionID: Kgl_lmKvGAGJY3W6vsx7tAA2-mTkUelC
- req.user.id: 45
- req.user.username: ZMCodi
- req.user.email: zaim.mohsin@gmail.com
üîê ‚úÖ AUTHENTICATION SUCCESS - User authenticated
üîê Proceeding with boost order creation for user 45
üì¶ BOOST PACKAGE METADATA CREATION:
üì¶ - Package ID: 25
üì¶ - Package Name: Standard Boost (1 Item)
üì¶ - Package Duration: 24 hours
üì¶ - Metadata boostPackageId: 25
üì¶ - Metadata durationHours: 24
üì¶ - Full metadata object: {
  "paymentType": "boost",
  "boostPackageId": 25,
  "boostPackageType": "standard",
  "boostPackageName": "Standard Boost (1 Item)",
  "durationHours": 24,
  "boostGroupId": "072db926-24cf-4c42-9af3-eb6578bbabaf",
  "productCount": 1,
  "productIds": [
    109
  ],
  "product_ids": "109",
  "productId": 109,
  "productDetails": [
    {
      "id": 109,
      "name": "Y EDP"
    }
  ]
}
Creating boost package payment: {
  packageId: 25,
  packageName: 'Standard Boost (1 Item)',
  productCount: 1,
  orderId: 'eda9acda-c1ee-4bfa-a6cb-2d8c47ecba44'
}
Creating payment with full data: {
  "orderId": "eda9acda-c1ee-4bfa-a6cb-2d8c47ecba44",
  "productIds": [
    109
  ],
  "amount": 5,
  "status": "due",
  "metadata": {
    "paymentType": "boost",
    "boostPackageId": 25,
    "boostPackageType": "standard",
    "boostPackageName": "Standard Boost (1 Item)",
    "durationHours": 24,
    "boostGroupId": "072db926-24cf-4c42-9af3-eb6578bbabaf",
    "productCount": 1,
    "productIds": [
      109
    ],
    "product_ids": "109",
    "productId": 109,
    "productDetails": [
      {
        "id": 109,
        "name": "Y EDP"
      }
    ]
  }
}
Setting product_id field directly to 109 for single product boost
Setting user_id field to 45
Final payment data being inserted: {
  "order_id": "eda9acda-c1ee-4bfa-a6cb-2d8c47ecba44",
  "bill_id": null,
  "collection_id": "5dkdgtmo",
  "amount": 500,
  "status": "due",
  "paid_at": null,
  "webhook_payload": "{\"paymentType\":\"boost\",\"boostPackageId\":25,\"boostPackageType\":\"standard\",\"boostPackageName\":\"Standard Boost (1 Item)\",\"durationHours\":24,\"boostGroupId\":\"072db926-24cf-4c42-9af3-eb6578bbabaf\",\"productCount\":1,\"productIds\":[109],\"product_ids\":\"109\",\"productId\":109,\"productDetails\":[{\"id\":109,\"name\":\"Y EDP\"}]}",
  "product_id": 109,
  "user_id": 45
}
Payment created with ID 8ab2f1b1-c196-4653-86bd-b2ccb28f8049 { product_id: 109, has_product_id: true }
Mapping payment data from DB: {
  availableFields: [
    'id',
    'order_id',
    'bill_id',
    'collection_id',
    'amount',
    'status',
    'paid_at',
    'webhook_payload',
    'created_at',
    'product_id',
    'user_id',
    'boost_option_id'
  ],
  dataTypes: {
    id: 'string',
    order_id: 'string',
    bill_id: 'object',
    collection_id: 'string',
    amount: 'number',
    status: 'string',
    paid_at: 'object',
    webhook_payload: 'string',
    created_at: 'string',
    product_id: 'number',
    user_id: 'string',
    boost_option_id: 'object'
  }
}
Found product_id in database record, converting to productIds array: 109
Mapped payment: {
  id: '8ab2f1b1-c196-4653-86bd-b2ccb28f8049',
  status: 'due',
  productIds: [ 109 ],
  product_id: 109
}
üîî Creating Billplz bill with params: {
  name: 'ZMCodi',
  email: 'zaim.mohsin@gmail.com',
  amount: 500,
  description: 'Standard Boost (1 Item) for: Y EDP',
  ref1: 'eda9acda-c1ee-4bfa-a6cb-2d8c47ecba44',
  ref2: '109'
}
üöÄ Billplz API Request: POST /v3/bills
üîç Content-Type: application/x-www-form-urlencoded
üì¶ Request body (form): collection_id=5dkdgtmo&name=ZMCodi&email=zaim.mohsin%40gmail.com&amount=500&description=Standard+Boost+%281+Item%29+for%3A+Y+EDP&callback_url=https%3A%2F%2Fbidscents.com%2Fapi%2Fpayments%2Fwebhook&redirect_url=https%3A%2F%2Fbidscents.com%2Fapi%2Fpayments%2Fprocess-redirect&reference_1=eda9acda-c1ee-4bfa-a6cb-2d8c47ecba44&reference_2=109
üîÑ Response status: 200 OK
‚úÖ Response data: {
  "id": "6b025bc550f9d657",
  "collection_id": "5dkdgtmo",
  "paid": false,
  "state": "due",
  "amount": 500,
  "paid_amount": 0,
  "due_at": "2025-5-31",
  "email": "zaim.mohsin@gmail.com",
  "mobile": null,
  "name": "ZMCODI",
  "url": "https://www.billplz-sandbox.com/bills/6b025bc550f9d657",
  "reference_1_label": "Reference 1",
  "reference_1": "eda9acda-c1ee-4bfa-a6cb-2d8c47ecba44",
  "reference_2_label": "Reference 2",
  "reference_2": "109",
  "redirect_url": "https://bidscents.com/api/payments/process-redirect",
  "callback_url": "https://bidscents.com/api/payments/webhook",
  "description": "Standard Boost (1 Item) for: Y EDP",
  "paid_at": null
}
Updating payment 8ab2f1b1-c196-4653-86bd-b2ccb28f8049 to status 'due'
Sending update to database: {
  table: 'payments',
  id: '8ab2f1b1-c196-4653-86bd-b2ccb28f8049',
  updateData: { status: 'due', bill_id: '6b025bc550f9d657' }
}
‚úÖ Successfully updated payment 8ab2f1b1-c196-4653-86bd-b2ccb28f8049 to status 'due'
Mapping payment data from DB: {
  availableFields: [
    'id',
    'order_id',
    'bill_id',
    'collection_id',
    'amount',
    'status',
    'paid_at',
    'webhook_payload',
    'created_at',
    'product_id',
    'user_id',
    'boost_option_id'
  ],
  dataTypes: {
    id: 'string',
    order_id: 'string',
    bill_id: 'string',
    collection_id: 'string',
    amount: 'number',
    status: 'string',
    paid_at: 'object',
    webhook_payload: 'string',
    created_at: 'string',
    product_id: 'number',
    user_id: 'string',
    boost_option_id: 'object'
  }
}
Found product_id in database record, converting to productIds array: 109
Mapped payment: {
  id: '8ab2f1b1-c196-4653-86bd-b2ccb28f8049',
  status: 'due',
  productIds: [ 109 ],
  product_id: 109
}
üîó Generated Billplz payment URL: https://www.billplz-sandbox.com/bills/6b025bc550f9d657
   Using SANDBOX environment
11:36:16 PM [express] POST /api/boost/create-order 200 in 1518ms :: {"success":true,"message":"Boost ‚Ä¶